#!/usr/bin/env bash
set -euo pipefail

# bs_android uploads app binaries for UI testing on BrowserStack.

echo "$@"

if [[ "$(patrol --version)" != *"v2"* ]]; then
	echo "Error: patrol_cli v2 is required"
	exit 1
fi

if [ -z "${CREDS:-}" ]; then
    echo "Error: missing CREDS env var"
    exit 1
fi

patrol build android

# https://www.browserstack.com/docs/app-automate/api-reference/espresso/apps#upload-an-app
app_upload_response="$(
	curl -u "$CREDS" \
		-X POST "https://api-cloud.browserstack.com/app-automate/espresso/v2/app" \
		-F "file=@$PWD/build/app/outputs/apk/debug/app-debug.apk"
)"

app_url="$(echo "$app_upload_response" | jq --raw-output .app_url)"
echo "Uploaded app, url: $app_url"

# https://www.browserstack.com/docs/app-automate/api-reference/espresso/tests#upload-a-test-suite
test_upload_response="$(
	curl --silent -u "$CREDS" \
		-X POST "https://api-cloud.browserstack.com/app-automate/espresso/v2/test-suite" \
		-F "file=@$PWD/build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk"
)"

test_url="$(echo "$test_upload_response" | jq --raw-output .test_suite_url)"
echo "Uploaded test, url: $test_url"

# https://www.browserstack.com/docs/app-automate/api-reference/espresso/builds#execute-a-build
curl -u "$CREDS" \
  -X POST "https://api-cloud.browserstack.com/app-automate/espresso/v2/build" \
  -H "Content-Type: application/json" \
  --data-binary @- <<EOF
{
    "app": "$app_url",
    "testSuite": "$test_url",
    "project": "Patrol example app",
    "devices": ["Google Pixel 4-10.0"],
    "singleRunnerInvocation": "true",
    "useOrchestrator": "true",
    "clearPackageData": "true",
    "deviceLogs": "true",
    "local": "false"
}
EOF
echo "Scheduled test execution"
