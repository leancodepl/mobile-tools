#!/usr/bin/env bash
set -euo pipefail

# bs_ios uploads app binaries for UI testing on BrowserStack.
#
# This version of the script works only with the V2 endpoint (XC Test Plans).
# This script assumes that Xcode Test Plan name is TestPlan.xctestplan.
#
# It forwards all arguments to "patrol build ios", so you can pass --target,
# --flavor, --exclude etc. just as you would pass them to "patrol_cli".
#
# It can also be configured with the following environment variables:
BROWSERSTACK_CREDS="${BROWSERSTACK_CREDS:-}"
BROWSERSTACK_PROJECT="${BROWSERSTACK_PROJECT:-}"
BROWSERSTACK_IOS_DEVICES="${BROWSERSTACK_IOS_DEVICES:-}"
BROWSERSTACK_SKIP_BUILD="${BROWSERSTACK_SKIP_BUILD:-0}"
BROWSERSTACK_IDLE_TIMEOUT="${BROWSERSTACK_IDLE_TIMEOUT:-900}"

# Capture all arguments because they'll be consumed by getopt
# shellcheck disable=SC2206
original_args=($@)

# Arg parsing start
FLAVOR=""
FLAVOR_PREFIXED="Runner"
FLAVOR_SUFFIXED="-"

TEMP=$(getopt -n "$0" -a -l "flavor:" -- -- "$@")
eval set -- "$TEMP"
while [ $# -gt 0 ]; do
	case "$1" in
	--flavor) FLAVOR="$2"; shift;;
	--) shift;;
	esac
	shift
done

if [ -n "$FLAVOR" ]; then
    echo "Passed flavor: $FLAVOR"
    FLAVOR_SUFFIXED="-$FLAVOR-"
    FLAVOR_PREFIXED="$FLAVOR"
fi
# Arg parsing end

if [ -z "${BROWSERSTACK_CREDS:-}" ]; then
    echo "Error: BROWSERSTACK_CREDS not set"
    exit 1
fi

if [ -z "$BROWSERSTACK_PROJECT" ]; then
    default_project="Unnamed iOS project"
    echo "BROWSERSTACK_PROJECT not set, using default: $default_project"
    BROWSERSTACK_PROJECT="$default_project"
fi

if [ -z "$BROWSERSTACK_IOS_DEVICES" ]; then
    default_devices="[\"iPhone 14-16\"]"
    echo "BROWSERSTACK_IOS_DEVICES not set, using default: $default_devices"
    BROWSERSTACK_IOS_DEVICES="$default_devices"
fi

if [ "$BROWSERSTACK_SKIP_BUILD" = 1 ]; then
  echo "BROWSERSTACK_SKIP_BUILD set to 1, build was skipped"
else
    patrol build ios --release "${original_args[@]}"
fi

echo "Will create zip archive of test files"

cd build/ios_integ/Build/Products

rm -rf Payload && mkdir -p Payload
cp -r "Release${FLAVOR_SUFFIXED}iphoneos/Runner.app" Payload
zip -r Runner.ipa Payload >/dev/null

cd - >/dev/null

cd "build/ios_integ/Build/Products/Release${FLAVOR_SUFFIXED}iphoneos"
rm -rf ios_tests.zip

# BrowserStack fails if DiagnosticCollectionPolicy is present
plutil -remove 'TestConfigurations.TestTargets.DiagnosticCollectionPolicy' ../"${FLAVOR_PREFIXED}"_TestPlan_iphoneos*.xctestrun

cp ../"${FLAVOR_PREFIXED}"_TestPlan_iphoneos*.xctestrun .
zip -r ios_tests.zip "${FLAVOR_PREFIXED}"_TestPlan_iphoneos*.xctestrun RunnerUITests-Runner.app >/dev/null
cd - >/dev/null

echo "Created zip archive"

app_path="$PWD/build/ios_integ/Build/Products/Runner.ipa"
if [ ! -f "$app_path" ]; then
  echo "Error: app under test not found at $app_path"
  exit 1
fi

# https://www.browserstack.com/docs/app-automate/api-reference/xcuitest/apps#upload-an-app
printf "Will upload app under test from %s\n\n" "$app_path"
app_upload_response="$(
    curl -u "$BROWSERSTACK_CREDS" \
        -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/app" \
        -F "file=@$app_path"
)"

app_url="$(echo "$app_upload_response" | jq --raw-output .app_url)"
printf "\nUploaded app under test, url: %s\n" "$app_url"

test_path="$PWD/build/ios_integ/Build/Products/Release${FLAVOR_SUFFIXED}iphoneos/ios_tests.zip"
if [ ! -f "$test_path" ]; then
  echo "Error: zip archive of test suite not found at $test_path"
  exit 1
fi


# https://www.browserstack.com/docs/app-automate/api-reference/xcuitest/tests#upload-a-test-suite
printf "Will upload zip archive of test suite from %s\n\n" "$test_path"
test_upload_response="$(
    curl -u "$BROWSERSTACK_CREDS" \
        -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/test-suite" \
        -F "file=@$test_path"
)"

test_url="$(echo "$test_upload_response" | jq --raw-output .test_suite_url)"
printf "\nUploaded zip archive of test suite, url: %s\n" "$test_url"

# https://www.browserstack.com/docs/app-automate/api-reference/xcuitest/builds#execute-a-build
printf "Will schedule test execution\n\n"
curl -u "$BROWSERSTACK_CREDS" \
    -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/xctestrun-build" \
    -H "Content-Type: application/json" \
    --data-binary @- <<EOF
{
    "app": "$app_url",
    "testSuite": "$test_url",
    "project": "$BROWSERSTACK_PROJECT",
    "devices": $BROWSERSTACK_IOS_DEVICES,
    "deviceLogs": true,
    "enableResultBundle": true,
    "idleTimeout": $BROWSERSTACK_IDLE_TIMEOUT
}
EOF

printf "\n\nScheduled test execution\n"
