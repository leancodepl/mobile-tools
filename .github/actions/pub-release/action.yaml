name: Release package to pub.dev
description: >
  Release a new package version to pub.dev and link to it from GitHub Releases.

inputs:
  path:
    description: Root directory of a Dart package
    default: '.'
  dry-run:
    description: If true, --dry-run flag is passed to pub
    default: 'false'

outputs:
  release_notes:
    description: URL of the release notes on pub.dev
    value: ${{ steps.create_metadata.outputs.release_notes }}

runs:
  using: composite

  steps:
    - name: Download mobile-tools
      uses: actions/checkout@v3
      with:
        repository: leancodepl/mobile-tools
        path: mobile-tools

    - name: Add mobile-tools to $PATH
      shell: bash
      run: echo "$GITHUB_WORKSPACE/mobile-tools/bin" >> $GITHUB_PATH

    - name: Export release metadata as environment variables
      shell: bash
      run: |
        tag=${{ github.ref_name }}
        echo "RELEASE_NOTES=$(link_changelog $tag)" >> $GITHUB_ENV
        echo "IS_PRERELEASE=$(is_prerelease $tag)" >> $GITHUB_ENV

    - name: Set action output
      id: create_metadata
      shell: bash
      run: |
        echo "release_notes=${{ env.RELEASE_NOTES }}" >> $GITHUB_OUTPUT

    # If `flutter` command is not available, use `dart pub publish`
    # If `flutter` command is available, use `flutter pub publish`
    # See also: https://github.com/dart-lang/setup-dart/issues/68
    - name: Publish to pub.dev
      shell: bash
      run: >
        args="";
        if [ "${{ inputs.dry-run }}" = "true"]; then
          args="--dry-run";
        else
          args="--force";
        fi;
        cd "${{ inputs.path }}";
        if command -v flutter 1>/dev/null 2>&1; then
          flutter pub publish "$args";
        else
          dart pub publish "$args";
        fi

    - name: Create release on GitHub
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ github.ref_name }}
        body: '[See changelog on pub.dev](${{ env.RELEASE_NOTES }})'
        prerelease: ${{ env.IS_PRERELEASE }}
